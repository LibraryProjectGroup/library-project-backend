name: Node.js CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches: ['main', 'development', 's23-staging']

env:
  TESTUSERNAME: ${{ secrets.REACT_APP_TEST_EMAIL }}
  TESTPASSWORD: ${{ secrets.REACT_APP_TEST_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      - run: npm ci
      - name: Check formatting
        run: npm run fmt:check
      - run: python -m pip install --upgrade pip
      - run: python -m pip install -r robot-dependencies.txt
      - name: Run services with docker-compose
        run: |
          docker-compose -f docker-compose-test.yml up -d
        env:
          DATABASE_SERVER: ${{ secrets.DATABASE_SERVER }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DATABASE_USER: ${{ secrets.DATABASE_USER }}
          DATABASE_PASSWORD: '${{ secrets.MYSQL_PASSWORD }}'
          OIDC_AUTH_BACKLINK_URL: '${{ secrets.OIDC_AUTH_BACKLINK_URL }}'
          OIDC_AUTH_REDIRECT_URL: '${{ secrets.OIDC_AUTH_REDIRECT_URL }}'
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: '${{ secrets.MYSQL_PASSWORD }}'
          MYSQL_ROOT_PASSWORD: '${{ secrets.MYSQL_ROOT_PASSWORD }}'
      - name: Spin up backend
        run: npx wait-on --timeout 120000 http://localhost:3002/health || (docker-compose -f docker-compose-test.yml logs --tail=10000 && exit 2)
      - run: npm test
      - run: docker-compose -f docker-compose-test.yml down
