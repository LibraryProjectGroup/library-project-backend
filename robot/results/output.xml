<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.7 on win32)" generated="20221014 10:29:29.235" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="C:\Users\Default User.DESKTOP-6H6NIQ4\Downloads\PROJECTO\library-project-backend\robot\tests">
<suite id="s1-s1" name="Hello" source="C:\Users\Default User.DESKTOP-6H6NIQ4\Downloads\PROJECTO\library-project-backend\robot\tests\hello.robot">
<test id="s1-s1-t1" name="My Test" line="8">
<kw name="Log" library="BuiltIn">
<arg>${MESSAGE}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221014 10:29:29.347" level="INFO">Hello, world!</msg>
<status status="PASS" starttime="20221014 10:29:29.340" endtime="20221014 10:29:29.347"/>
</kw>
<doc>Example test.</doc>
<status status="PASS" starttime="20221014 10:29:29.338" endtime="20221014 10:29:29.349"/>
</test>
<doc>Just checking</doc>
<status status="PASS" starttime="20221014 10:29:29.326" endtime="20221014 10:29:29.353"/>
</suite>
<suite id="s1-s2" name="Trialtests" source="C:\Users\Default User.DESKTOP-6H6NIQ4\Downloads\PROJECTO\library-project-backend\robot\tests\trialtests.robot">
<test id="s1-s2-t1" name="Get Request Test" line="6">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>http://javaohjelmointi.net:15001/book/all</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221014 10:29:30.231" level="INFO">GET Request : url=http://javaohjelmointi.net:15001/book/all 
 path_url=/book/all 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221014 10:29:30.232" level="INFO">GET Response : url=http://javaohjelmointi.net:15001/book/all 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Vary': 'Origin', 'Access-Control-Allow-Credentials': 'true', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1290', 'ETag': 'W/"50a-+YRJ9oeVxy6tgkIcd7aA4dY9igY"', 'Date': 'Fri, 14 Oct 2022 07:29:30 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body=[{"id":1,"library_user":1,"title":"JS for Bunnies","author":"Mikko Möllikäs","isbn":"123-456-789","topic":"A test has edited this field","location":"Here"},{"id":3,"library_user":3,"title":"Python for Pets","author":"S. Bonsaaa","isbn":"123-456-5622","topic":"Typescript","location":"Hong Kong"},{"id":40,"library_user":1,"title":"Me","author":"Me","isbn":"asdfasdf","topic":"Me","location":"My home"},{"id":60,"library_user":1,"title":"How to be","author":"Meitz","isbn":"9999999","topic":"Lifebrags","location":"Eira"},{"id":68,"library_user":1,"title":"Loan this","author":"asdfsdf","isbn":"lkdjföl","topic":"dafolk","location":"alökjfd"},{"id":69,"library_user":1,"title":"HELLOOOO","author":"HELLOOOOOO","isbn":"HELLLOOOOOOOO","topic":"HELLOOOOOO","location":"WORLD"},{"id":70,"library_user":1,"title":"3241234","author":"12323413","isbn":"134123","topic":"32412134","location":"31241243"},{"id":71,"library_user":1,"title":"book","author":"hwjhdw","isbn":"cdjnchdn","topic":"crime","location":"Helsinki"},{"id":72,"library_user":1,"title":"Binary for Babies","author":"ugguaguauguga","isbn":"aaaaaa","topic":"Self help","location":"Unknown"},{"id":73,"library_user":1,"title":"Random Alphabets","author":"R. Random","isbn":"0000000","topic":"Reading","location":"akljsdhflkashj"}] 
 </msg>
<msg timestamp="20221014 10:29:30.234" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221014 10:29:29.733" endtime="20221014 10:29:30.234"/>
</kw>
<status status="PASS" starttime="20221014 10:29:29.732" endtime="20221014 10:29:30.241"/>
</test>
<test id="s1-s2-t2" name="Quick Get A JSON Body Test" line="9">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>url=http://javaohjelmointi.net:15001/example</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221014 10:29:30.337" level="INFO">GET Request : url=http://javaohjelmointi.net:15001/example 
 path_url=/example 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221014 10:29:30.337" level="INFO">GET Response : url=http://javaohjelmointi.net:15001/example 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Vary': 'Origin', 'Access-Control-Allow-Credentials': 'true', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '561', 'ETag': 'W/"231-o5rrnnXNN6dQ4HOqnRzHXjI37mw"', 'Date': 'Fri, 14 Oct 2022 07:29:30 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body=[{"id":1,"library_user":"John Doe","title":"Python Machine Learning: Machine Learning and Deep Learning with Python, scikit-learn, and TensorFlow 2, 3rd Edition","author":"Klabnik, Steve","topic":"Machine Learning","isbn":"9781492032649","location":"Helsinki"},{"id":2,"library_user":"John Doe","title":"Book 2","author":"Klabnik, Steve","topic":"Machine Learning","isbn":"9781492032649","location":"Helsinki"},{"id":3,"library_user":"John Doe","title":"Book 3","author":"Klabnik, Steve","topic":"Machine Learning","isbn":"9781492032649","location":"Helsinki"}] 
 </msg>
<msg timestamp="20221014 10:29:30.337" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221014 10:29:30.257" endtime="20221014 10:29:30.337"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>Python Machine Learning: Machine Learning and Deep Learning with Python, scikit-learn, and TensorFlow 2, 3rd Edition</arg>
<arg>${response.json()}[0][title]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20221014 10:29:30.338" endtime="20221014 10:29:30.341"/>
</kw>
<status status="PASS" starttime="20221014 10:29:30.252" endtime="20221014 10:29:30.345"/>
</test>
<status status="PASS" starttime="20221014 10:29:29.358" endtime="20221014 10:29:30.350"/>
</suite>
<status status="PASS" starttime="20221014 10:29:29.240" endtime="20221014 10:29:30.354"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Hello">Tests.Hello</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Trialtests">Tests.Trialtests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
